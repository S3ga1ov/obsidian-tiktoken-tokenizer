import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import fs from "fs/promises";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === "production");

async function copyWasm() {
    try {
        await fs.copyFile(
            './node_modules/@dqbd/tiktoken/tiktoken_bg.wasm',
            './tiktoken_bg.wasm'
        );
        console.log('tiktoken_bg.wasm copied successfully.');
    } catch (err) {
        console.error('Error copying wasm file:', err);
        process.exit(1);
    }
}

import watPlugin from 'esbuild-plugin-wat';

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["main.ts"],
	bundle: true,
	plugins: [watPlugin({ loader: 'empty' })],
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins],
	format: "cjs",
	target: "es2020",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: "main.js",
});

await copyWasm();

if (prod) {
	await context.rebuild();
	process.exit(0);
} else {
	await context.watch();
}
